- name: Create upload folder for Hilary
  become: yes
  become_user: root
  file:
    path: /opt/tmp/uploads
    state: directory
    owner: "{{ hilary_user }}"
    group: "{{ hilary_user }}"

- name: Create previews folder Hilary
  file:
    path: /opt/tmp/previews
    state: directory
    owner: "{{ hilary_user }}"
    group: "{{ hilary_user }}"

- name: Create folder for Hilary
  become: yes
  become_user: root
  file:
    path: /opt/Hilary
    state: directory
    owner: "{{ hilary_user }}"
    group: "{{ hilary_user }}"

- name: Create log folder for Hilary
  become: yes
  become_user: root
  file:
    path: /var/log/Hilary/
    recurse: yes
    state: directory
    owner: "{{ hilary_user }}"
    group: "{{ hilary_user }}"

- name: Install system dependencies for Hilary
  become: yes
  become_user: root
  apt:
    name:
      - libreoffice-core
      - libreoffice-base-core
      - libreoffice-writer
      - libvips42
      - poppler-utils
      - openjdk-8-jre-headless
      - build-essential
      # these ones are chromium related
      - gconf-service
      - libasound2
      - libatk1.0-0
      - libatk-bridge2.0-0
      - libc6
      - libcairo2
      - libcups2
      - libdbus-1-3
      - libexpat1
      - libfontconfig1
      - libgcc1
      - libgconf-2-4
      - libgdk-pixbuf2.0-0
      - libglib2.0-0
      - libgtk-3-0
      - libnspr4
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libstdc++6
      - libx11-6
      - libx11-xcb1
      - libxcb1
      - libxcomposite1
      - libxcursor1
      - libxdamage1
      - libxext6
      - libxfixes3
      - libxi6
      - libxrandr2
      - libxrender1
      - libxss1
      - libxtst6
      - ca-certificates
      - fonts-liberation
      - libappindicator1
      - libnss3
      - lsb-release
      - xdg-utils
      - wget
    state: present
    update_cache: true

- name: Install puppeteer dependencies
  become: yes
  become_user: root
  apt:
    name:
      - ca-certificates
      - fonts-liberation
      - libappindicator3-1
      - libatk-bridge2.0-0
      - libatk1.0-0
      - libc6
      - libcairo2
      - libcups2
      - libdbus-1-3
      - libexpat1
      - libfontconfig1
      - libgbm1
      - libgcc1
      - libglib2.0-0
      - libgtk-3-0
      - libnspr4
      - libnss3
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libstdc++6
      - libx11-6
      - libx11-xcb1
      - libxcb1
      - libxcomposite1
      - libxcursor1
      - libxdamage1
      - libxext6
      - libxfixes3
      - libxi6
      - libxrandr2
      - libxrender1
      - libxss1
      - libxtst6
      - lsb-release
      - wget
      - xdg-utils

- name: Download PPA and Install nodejs
  shell: |
    curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
  when: node_installed.rc != 0 or (node_installed.rc == 0 and node_installed.stdout != node_version)

- name: Clone the repo
  git:
    repo: "https://github.com/oaeproject/Hilary"
    depth: 5
    force: yes
    dest: /opt/Hilary
    version: master

- name: Install 3akai-ux dependencies
  shell: |
    cd /opt/Hilary/3akai-ux && npm install

- name: Build the frontend
  shell: |
    cd /opt/Hilary/3akai-ux && npx grunt

- name: Install Hilary dependencies
  shell: |
    cd /opt/Hilary && npm install

- name: Set Hilary configuration
  shell: |
    cd /opt/Hilary
    printf "\n\nconfig.ui.path = '{{ui_path}}';"                                           >> config.js
    printf "\n\nconfig.cassandra.hosts = [ {{ cassandra_hosts }} ];"                       >> config.js
    printf "\n\nconfig.cassandra.timeout = {{cassandra_timeout}};"                         >> config.js
    printf "\n\nconfig.cassandra.replication = {{cassandra_replication}};"                 >> config.js
    printf "\n\nconfig.redis.host = {{redis_hosts}};"                                      >> config.js
    printf "\n\nconfig.servers.serverInternalAddress = {{server_internal_address}};"       >> config.js
    printf "\n\nconfig.servers.globalAdminHost = {{server_global_admin_host}};"            >> config.js
    printf "\n\nconfig.servers.guestTenantAlias = {{server_guest_tenant_alias}};"          >> config.js
    printf "\n\nconfig.servers.guestTenantHost = {{server_guest_tenant_host}};"            >> config.js
    # printf "\n\nconfig.servers.shibbolethSPHost = '';"                                   >> config.js
    printf "\n\nconfig.servers.useHttps = {{server_use_https}};"                           >> config.js
    printf "\n\nconfig.servers.strictHttps = {{server_strict_https}};"                     >> config.js
    printf "\n\nconfig.files.tmpDir = {{files_tmpDir}};"                                   >> config.js
    printf "\n\nconfig.files.uploadDir = {{files_uploadDir}};"                             >> config.js
    printf "\n\nconfig.files.localStorageDirectory = {{files_localStorageDir}};"           >> config.js
    printf "\n\nconfig.cookie.secret = {{cookie_secret}};"                                 >> config.js
    printf "\n\nconfig.search.hosts = [ {{ search_hosts }} ];"                             >> config.js
    printf "\n\nconfig.search.index.destroyOnStartup = {{search_destroy}};"                >> config.js
    printf "\n\nconfig.mq.host = {{ redis_hosts }};"                                       >> config.js
    printf "\n\nconfig.previews.tmpDir = {{previews_tmpDir}};"                             >> config.js
    printf "\n\nconfig.signing.key = {{signing_key}};"                                     >> config.js
    printf "\n\nconfig.email.debug = {{email_debug}};"                                     >> config.js
    # printf "\n\nconfig.email.customEmailTemplatesDir = %s;"                              >> config.js
    # printf "\n\nconfig.email.deduplicationInterval = %s;"                                >> config.js
    # printf "\n\nconfig.email.throttling.count = %s;"                                     >> config.js
    # printf "\n\nconfig.email.throttling.timespan = %s;"                                  >> config.js
    printf "\n\nconfig.email.transport = {{email_transport}};"                             >> config.js
    # printf "\n\nconfig.email.sendmailTransport.path = \'%s\';"                           >> config.js
    # printf "\n\nconfig.email.smtpTransport = %O;"                                        >> config.js
    printf "\n\nconfig.etherpad.apikey = '{{ etherpad_apikey }}';"                         >> config.js
    printf "\n\nconfig.etherpad.hosts = [{{ etherpad_hosts }}];"                           >> config.js
    printf "\n\nconfig.ethercalc = [{{ ethercalc_hosts }}];"                               >> config.js
    printf "\n\nconfig.previews.enabled = {{previews_enabled}};"                           >> config.js
    printf "\n\nconfig.previews.credentials.password = {{previews_credentials_password}};" >> config.js

- name: Run migrations
  shell: |
    cd /opt/Hilary
    npm run migrate
  run_once: true

- name: Copy PM2 configuration to remote
  copy:
    dest: /opt/Hilary
    src: process.json

- name: Copy production.js to production
  copy:
    dest: /opt/Hilary
    src: production.js

- name: Install PM2
  become: yes
  become_user: root
  shell: |
    npm install -g pm2

- name: Start (or reload) PM2
  shell: |
    cd /opt/Hilary
    export TWITTER_KEY=vuMy7DqnfPkHPrHE3eqkWp3uG
    export TWITTER_SECRET=coPAXA5Vsngt4k9ehHbmvRiG7qX0VKLBG47U0oJja2PkEYyOET
    export FACEBOOK_APP_ID=194758077323671
    export FACEBOOK_APP_SECRET=663d14e7f9ad0baeb4e43390825a659f
    export GOOGLE_CLIENT_ID=822036948319.apps.googleusercontent.com
    export GOOGLE_CLIENT_SECRET=b5ccr5noy0j_gzj4kj42uuwm
    export TMP="/opt/tmp"
    pm2 startOrReload process.json

- name: Save PM2 session
  shell: |
    cd /opt/Hilary
    pm2 save

- name: Make PM2 restart on boot
  become: yes
  become_user: root
  shell: |
    env PATH=$PATH:/usr/bin pm2 startup systemd -u oae --hp /home/oae
    systemctl enable pm2-oae
